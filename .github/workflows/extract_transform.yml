# .github/workflows/extract_transform.yml
name: ETL - Extract & Transform

on:
  schedule:
    - cron: '0 3 * * *'        # 00:00 BRT
  workflow_dispatch:          # permite disparo manual

jobs:
  extract_transform:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Vinicios@212121
          POSTGRES_DB: ecommerce_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="PGPASSWORD='Vinicios@212121' pg_isready -U postgres -d ecommerce_db"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgresql://postgres:Vinicios%40212121@localhost:5432/ecommerce_db

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install pandas sqlalchemy psycopg2-binary requests python-dotenv

      - name: Esperar Postgres ficar pronto
        run: |
          echo "Aguardando o PostgreSQL iniciar…"
          until PGPASSWORD='Vinicios@212121' pg_isready -h localhost -p 5432 -U postgres; do
            sleep 1
          done

      - name: Criar schemas e tabelas no Postgres
        run: |
          PGPASSWORD='Vinicios@212121' psql \
            -h localhost -U postgres -d ecommerce_db \
            -c "CREATE SCHEMA IF NOT EXISTS staging; \
                CREATE TABLE IF NOT EXISTS staging.online_retail ( \
                  InvoiceNo   VARCHAR(50), \
                  StockCode   VARCHAR(50), \
                  Description TEXT, \
                  Quantity    INTEGER, \
                  InvoiceDate TIMESTAMP, \
                  UnitPrice   NUMERIC, \
                  CustomerID  VARCHAR(50), \
                  Country     VARCHAR(100) \
                ); \
                CREATE SCHEMA IF NOT EXISTS analytics; \
                CREATE TABLE IF NOT EXISTS analytics.sales_summary ( \
                  country         VARCHAR(100), \
                  invoice_date    DATE, \
                  total_quantity  INTEGER, \
                  total_revenue   NUMERIC, \
                  ticket_medio    NUMERIC, \
                  PRIMARY KEY (country, invoice_date) \
                );"

      - name: Executar Extract
        run: python scripts/extract.py

      - name: Executar Transform
        run: python scripts/transform.py



